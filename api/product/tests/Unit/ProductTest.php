<?php

namespace Tests\Unit;

use Illuminate\Contracts\Console\Kernel;
use Illuminate\Foundation\Testing\TestCase as BaseTestCase;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Tests\CreatesApplication;

class ProductTest extends BaseTestCase
{
    use RefreshDatabase, CreatesApplication;
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $app = require __DIR__.'/../../bootstrap/app.php';
        $app->make(Kernel::class)->bootstrap();
        $this->artisan('migrate:fresh --seed');
    }

    public function test_product_seeder(): void
    {
        $this->assertDatabaseCount('products', 8);
        $this->assertDatabaseCount('categories', 3);
        $this->assertDatabaseCount('sub_categories', 6);
    }

    public function test_product_get_all(): void
    {
        $response = $this->get('/api/products');
        $response->assertStatus(200);
        $response->assertJsonCount(8);
    }

    public function test_product_get_one(): void
    {
        $response = $this->get('/api/products/1');
        $response->assertStatus(200);
        $response->assertJsonCount(1);
    }

    public function test_categories_get_all(): void
    {
        $response = $this->get('/api/categories');
        $response->assertStatus(200);
        $response->assertJsonCount(3);
    }

    public function test_categories__get_one(): void
    {
        $response = $this->get('/api/categories/1');
        $response->assertStatus(200);
        $response->assertJsonCount(1);
    }

    public function test_sub_categories_get_all(): void
    {
        $response = $this->get('/api/sub-categories');
        $response->assertStatus(200);
        $response->assertJsonCount(6);
    }

    public function test_sub_categories__get_one(): void
    {
        $response = $this->get('/api/sub-categories/1');
        $response->assertStatus(200);
        $response->assertJsonCount(1);
    }

    public function test_product_get_by_sub_category(): void
    {
        $response = $this->get('/api/sub-categories/1/products');
        $response->assertStatus(200);
        $response->assertJsonCount(2);
    }

    public function test_product_get_by_category(): void
    {
        $response = $this->get('/api/categories/1/sub-categories/products');
        $response->assertStatus(200);
        $response->assertJsonCount(4);
    }

    public function test_sub_category_get_by_category(): void
    {
        $response = $this->get('/api/categories/1/sub-categories');
        $response->assertStatus(200);
        $response->assertJsonCount(2);
    }
}
